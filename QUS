class QueueusingStacks:
    def __init__(self):
        self.stack_enqueue=[]
        self.stack_dequeue=[]

    def enqueue(self,item):
        self.stack_enqueue.append(item)

    def dequeue(self):
        if not self.stack_dequeue:
            if not self.stack_enqueue:
                return "Queue is empty"
            else:
                while self.stack_enqueue:
                    self.stack_dequeue.append(self.stack_enqueue.pop())
        return self.stack_dequeue.pop()
    
    def peek(self):
        if not self.stack_dequeue:
            if not self.stack_enqueue:
                return "Queue is empty"
            else:
                while self.stack_enqueue:
                    self.stack_dequeue.append(self.stack_enqueue.pop())
        return self.stack_dequeue[-1]
    
    def is_empty(self):
        return not self.stack_enqueue and not self.stack_dequeue
    
qus=QueueusingStacks()
qus.enqueue(1)
qus.enqueue(2)
qus.enqueue(3)
print(qus.dequeue())
print(qus.peek())
print(qus.dequeue())
print(qus.is_empty())
print(qus.dequeue())
print(qus.is_empty())
print(qus.dequeue())


